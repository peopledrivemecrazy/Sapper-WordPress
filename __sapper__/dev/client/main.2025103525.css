main.svelte-1uhnsl8{position:relative;max-width:56em;background-color:white;padding:2em;margin:0 auto;box-sizing:border-box}
h1.svelte-8od9u6,p.svelte-8od9u6{margin:0 auto}h1.svelte-8od9u6{font-size:2.8em;font-weight:700;margin:0 0 0.5em 0}p.svelte-8od9u6{margin:1em auto}@media(min-width: 480px){h1.svelte-8od9u6{font-size:4em}}
h1.svelte-1kk9opm,figure.svelte-1kk9opm,p.svelte-1kk9opm{text-align:center;margin:0 auto}h1.svelte-1kk9opm{font-size:2.8em;text-transform:uppercase;font-weight:700;margin:0 0 0.5em 0}figure.svelte-1kk9opm{margin:0 0 1em 0}img.svelte-1kk9opm{width:100%;max-width:400px;margin:0 0 1em 0}p.svelte-1kk9opm{margin:1em auto}@media(min-width: 480px){h1.svelte-1kk9opm{font-size:4em}}
blockquote{border-color:#159794;border-style:solid;border-width:0 0 0 .2rem;color:inherit;font-size:1em;margin:4rem 0;padding:.5rem 0 .5rem 2rem}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
.content.svelte-gnxal1 h2{font-size:1.4em;font-weight:500}.content.svelte-gnxal1 pre{background-color:#f9f9f9;box-shadow:inset 1px 1px 5px rgba(0,0,0,0.05);padding:0.5em;border-radius:2px;overflow-x:auto}.content.svelte-gnxal1 pre code{background-color:transparent;padding:0}.content.svelte-gnxal1 ul{line-height:1.5}.content.svelte-gnxal1 li{margin:0 0 0.5em 0}
ul.svelte-1frg2tf{margin:0 0 1em 0;line-height:1.5}
img{max-width:100%}.bread-crumb.svelte-16vesbw.svelte-16vesbw{padding:1em;background-color:#eee;border-radius:4px}.blog.svelte-16vesbw.svelte-16vesbw{padding-top:1em}.comments.svelte-16vesbw.svelte-16vesbw{border:1px solid #eee;padding:2em}.comments.svelte-16vesbw h2.svelte-16vesbw{padding:1em 0}.comment-item.svelte-16vesbw.svelte-16vesbw{padding-top:1em}.author-meta.svelte-16vesbw.svelte-16vesbw{display:flex;align-items:center}.author-meta.svelte-16vesbw img.svelte-16vesbw{border-radius:100%;background-color:#eee}.author-meta.svelte-16vesbw span.svelte-16vesbw{padding-left:1em}textarea.svelte-16vesbw.svelte-16vesbw{width:100%;margin:1em 0}.form-input.svelte-16vesbw.svelte-16vesbw{padding:1em 0}.errors.svelte-16vesbw.svelte-16vesbw{color:red}
nav.svelte-ib55v1{border-bottom:1px solid rgba(255, 62, 0, 0.1);font-weight:300;padding:0 1em}ul.svelte-ib55v1{margin:0;padding:0}ul.svelte-ib55v1::after{content:'';display:block;clear:both}li.svelte-ib55v1{display:block;float:left}[aria-current].svelte-ib55v1{position:relative;display:inline-block}[aria-current].svelte-ib55v1::after{position:absolute;content:'';width:calc(100% - 1em);height:2px;background-color:rgb(255, 62, 0);display:block;bottom:-1px}a.svelte-ib55v1{text-decoration:none;padding:1em 0.5em;display:block}
/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */